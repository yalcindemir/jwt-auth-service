server:
  port: 8081
  servlet:
    context-path: /auth-service

spring:
  application:
    name: auth-service
  
  # PostgreSQL Yapılandırması
  datasource:
    url: jdbc:postgresql://localhost:5432/auth_service_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  # JPA Yapılandırması
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  
  # Flyway Yapılandırması
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  # Security Yapılandırması
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/auth-service

# Eureka Yapılandırması
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.uuid}

# Keycloak Yapılandırması
keycloak:
  auth-server-url: http://localhost:8080/auth
  realm: auth-service
  resource: auth-service-client
  public-client: false
  bearer-only: true
  principal-attribute: preferred_username

# OpenFGA Yapılandırması
openfga:
  api-url: http://localhost:8082
  store-id: your-store-id
  model-id: your-model-id
  authorization-model-id: your-authorization-model-id

# JWT Yapılandırması
jwt:
  secret: your-jwt-secret-key-should-be-at-least-256-bits
  expiration: 86400000 # 24 saat (milisaniye cinsinden)
  refresh-token:
    expiration: 604800000 # 7 gün (milisaniye cinsinden)

# Actuator Yapılandırması
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# OpenAPI Yapılandırması
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  packages-to-scan: com.authservice.controller
